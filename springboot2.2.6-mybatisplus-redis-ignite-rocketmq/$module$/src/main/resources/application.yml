server:
  port: 8080

spring:
  output:
    ansi:
      enabled: always
  datasource:
    ignite:
      name: ignite-data
      url: jdbc:ignite:thin://192.168.0.250:10800
      #      默认初始化数据表
      #      schema: classpath:db/init.sql
      driver-class-name: org.apache.ignite.IgniteJdbcThinDriver
      type: com.alibaba.druid.pool.DruidDataSource # 使用druid数据源
      initialSize: 10 #初始化连接数量，最大最小连接数
      maxActive: 100
      minIdle: 3
      maxWait: 600000  #获取连接等待超时的时间
      removeAbandoned: true  #超过时间限制是否回收
      removeAbandonedTimeout: 180 #超过时间限制多长
      timeBetweenEvictionRunsMillis: 600000 #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      minEvictableIdleTimeMillis: 300000 #配置一个连接在池中最小生存的时间，单位是毫秒
      validationQuery: SELECT 1 FROM DUAL #用来检测连接是否有效的sql，要求是一个查询语句
      testWhileIdle: true #申请连接的时候检测
      testOnBorrow: false #申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能
      testOnReturn: false #归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能
      poolPreparedStatements: true #打开PSCache，并且指定每个连接上PSCache的大小
      maxPoolPreparedStatementPerConnectionSize: 100
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      filters: stat #属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat 日志用的filter:log4j 防御SQL注入的filter:wall
    uid:
      name: uid-data
      url: jdbc:mysql://{host}/sso?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=round&allowMultiQueries=true
      username: {username}
      password: {password}
      driver-class-name: com.mysql.cj.jdbc.Driver
      type: com.alibaba.druid.pool.DruidDataSource # 使用druid数据源
      initialSize: 10 #初始化连接数量，最大最小连接数
      maxActive: 100
      minIdle: 3
      maxWait: 600000  #获取连接等待超时的时间
      removeAbandoned: true  #超过时间限制是否回收
      removeAbandonedTimeout: 180 #超过时间限制多长
      timeBetweenEvictionRunsMillis: 600000 #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      minEvictableIdleTimeMillis: 300000 #配置一个连接在池中最小生存的时间，单位是毫秒
      validationQuery: SELECT 1 FROM DUAL #用来检测连接是否有效的sql，要求是一个查询语句
      testWhileIdle: true #申请连接的时候检测
      testOnBorrow: false #申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能
      testOnReturn: false #归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能
      poolPreparedStatements: true #打开PSCache，并且指定每个连接上PSCache的大小
      maxPoolPreparedStatementPerConnectionSize: 100
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      filters: stat #属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat 日志用的filter:log4j 防御SQL注入的filter:wall
  redis:
    host: 192.168.0.250
    port: 6379
    password:
    timeout: 5000 #连接超时时间
      lettuce:
        pool:
          max-active: 30 #连接池最大连接数
          max-wait: -1 #连接池最大阻塞时间
          max-idle: 10 #连接池中最大空闲连接
          min-idle: 5 #连接池中最小空闲连接


  cloud:
    stream:
      #rocket mq 服务器地址绑定
      rocketmq:
        binder:
          name-server: 192.168.0.250:9876


feign:
  okhttp:
    enabled: true
  client:
    config:
      feignName:
        connectTimeout: 5000
        readTimeout: 5000
  compression:
    request: #请求
      enabled: true #开启
      mime-types: text/xml,application/xml,application/json #开启支持压缩的MIME TYPE
      min-request-size: 2048 #配置压缩数据大小的下限
    response: #响应
      enabled: true #开启响应GZIP压缩


logging:
  level:
    com:
      ds: debug

  path: /var/log/tomcat/
  config: classpath:logback.xml

mybatis-plus:
  #  mapper-locations: classpath:mapper/*/*.xml
  configuration:
    cache-enabled: true