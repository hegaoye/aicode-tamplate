server:
  port: 8080

spring:
  output:
    ansi:
      enabled: always
  main:
    allow-bean-definition-overriding: true
  datasource:
    tidb:
      name: mysql-data
      url: jdbc:mysql://{host}/{database}?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=round&allowMultiQueries=true
      username: {username}
      password: {password}
      driver-class-name: com.mysql.cj.jdbc.Driver
      type: com.alibaba.druid.pool.DruidDataSource # 使用druid数据源
      initialSize: 10 #初始化连接数量，最大最小连接数
      maxActive: 100
      minIdle: 3
      maxWait: 600000  #获取连接等待超时的时间
      removeAbandoned: true  #超过时间限制是否回收
      removeAbandonedTimeout: 180 #超过时间限制多长
      timeBetweenEvictionRunsMillis: 600000 #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      minEvictableIdleTimeMillis: 300000 #配置一个连接在池中最小生存的时间，单位是毫秒
      validationQuery: SELECT 1 FROM DUAL #用来检测连接是否有效的sql，要求是一个查询语句
      testWhileIdle: true #申请连接的时候检测
      testOnBorrow: false #申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能
      testOnReturn: false #归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能
      poolPreparedStatements: true #打开PSCache，并且指定每个连接上PSCache的大小
      maxPoolPreparedStatementPerConnectionSize: 100
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      filters: stat #属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat 日志用的filter:log4j 防御SQL注入的filter:wall
    uid:
      name: uid-data
      url: jdbc:mysql://192.168.0.250:4000/sso?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=round&allowMultiQueries=true
      username: {username}
      password: {password}
      driver-class-name: com.mysql.cj.jdbc.Driver
      type: com.alibaba.druid.pool.DruidDataSource # 使用druid数据源
      initialSize: 10 #初始化连接数量，最大最小连接数
      maxActive: 100
      minIdle: 3
      maxWait: 600000  #获取连接等待超时的时间
      removeAbandoned: true  #超过时间限制是否回收
      removeAbandonedTimeout: 180 #超过时间限制多长
      timeBetweenEvictionRunsMillis: 600000 #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      minEvictableIdleTimeMillis: 300000 #配置一个连接在池中最小生存的时间，单位是毫秒
      validationQuery: SELECT 1 FROM DUAL #用来检测连接是否有效的sql，要求是一个查询语句
      testWhileIdle: true #申请连接的时候检测
      testOnBorrow: false #申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能
      testOnReturn: false #归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能
      poolPreparedStatements: true #打开PSCache，并且指定每个连接上PSCache的大小
      maxPoolPreparedStatementPerConnectionSize: 100
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      filters: stat #属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat 日志用的filter:log4j 防御SQL注入的filter:wall

  redis:
    host: 192.168.0.250
    port: 6379
    password:
  cloud:
    stream:
      rocketmq:
        binder:
          name-server: 192.168.0.250:9876


#feign:
#  client:
#    config:
#      feignName:
#        connectTimeout: 5000
#        readTimeout: 5000


hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 60000

##Ribbon超时重试配置
ribbon:
  ConnectTimeout: 20000  #毫秒    连接超时时间
  ReadTimeout: 20000     #毫秒      逻辑处理超时时间
  OkToRetryOnAllOperations: true    # 是否对所有操作都进行重试
  MaxAutoRetries: 2     # 对当前实例的最大重试次数(请求服务超时6s则会再请求一次)
  MaxAutoRetriesNextServer: 1     # 切换实例的最大重试次数(如果还失败就切换下

logging:
  level:
    com:
      ds: debug

  path: /var/log/tomcat/
  config: classpath:logback.xml

mybatis-plus:
  #  mapper-locations: classpath:mapper/*/*.xml,classpath:/META-INF/mybatis/mapper/WORKER*.xml
  configuration:
    cache-enabled: true